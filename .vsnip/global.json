{
    "Arrow Function": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["arrow", "() =>"],
        "description": "Regular arrow function in js/ts",
        "body": [
            "(${1:args}) => {",
            "\t$0",
            "}"
        ]
    },
    "Arrow Function as a Variable": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["constarrow", "carr", "const () =>"],
        "description": "Regular arrow function as a const variable in js/ts",
        "body": [
            "const ${1:name} = (${2:args}) => {",
            "\t$0",
            "}"
        ]
    },
    "Console Log": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["console.log", "clog", "log"],
        "description": "Log to console",
        "body": [
            "console.log(${1:content})",
            "$0"
        ]
    },
    "Console Info": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["console.info", "cinfo", "info"],
        "description": "Log info to console",
        "body": [
            "console.info(${1:content})",
            "$0"
        ]
    },
    "Console Table": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["console.table", "ctable", "table"],
        "description": "Log table to console",
        "body": [
            "console.table(${1:content})",
            "$0"
        ]
    },
    "Console Error": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["console.error", "cerror", "error"],
        "description": "Log error to console",
        "body": [
            "console.error(${1:content})",
            "$0"
        ]
    },
    "Import": {
        "scope": "javascript,typescript,javascriptreact,typescriptreact",
        "prefix": ["import"],
        "description": "Import from a module",
        "body": [
            "import ${1:content} from '${2:module}'",
            "$0"
        ]
    },
    "TSX Component": {
        "scope": "typescriptreact",
        "prefix": ["tsxcomp", "comp", "components", "rfc"],
        "description": "Boilerplate for a typescript react component",
        "body": [
            "import React from 'react'",
            "",
            "interface Props {",
            "\t${1:props}",
            "}",
            "",
            "const ${2:Component} = ({",
            "\t${3:props}",
            "}) => {",
            "\t$0",
            "}"
        ]
    },
    "Express Router": {
        "scope": ["javascript", "typescript"],
        "prefix": ["expressrouter", "exprtr", "rtr", "router"],
        "description": "Boilerplate for Express router",
        "body": [
            "import Express from 'express'",
            "",
            "const router = Express.Router()",
            "",
            "$0"
        ]
    },
    "Express Router Route": {
        "scope": ["javascript", "typescript"],
        "prefix": ["route", "exproute", "rt", "expressroute"],
        "description": "Boilerplate for Express router route",
        "body": [
            "router.route('${1:route}').${2:method}(",
            "\t${1:callback}",
            ")",
            "$0"
        ]
    },
    "Agenda TODO": {
        "scope": "org",
        "prefix": ["TODO", "todo", "agendatodo"],
        "description": "Orgmode TODO template",
        "body": [
            "* TODO ${1:item}",
            "  DEADLINE: <${2:deadline}>",
            "$0"
        ]
    }
}
